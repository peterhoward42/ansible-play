o  Try this instead
	*  https://hub.docker.com/r/rastasheep/ubuntu-sshd/
	*  quick hack - it just works!!!
	*  try 1804
	*  try without sudo
	*  explicit port mapping?
	*  how come --rm is not working?
	*  browse code
	*  move to dockerfile including rename?
		*  will make run work?
		*  does it leave sshd running? = yes
		*  can you ssh into it with root password?
	*  doc so far
	o  bank
	o  try the more secure options

o  Ditch some of the stuff below?

Notes,

docker run -p 8234:22 --rm --name test_sshd rastasheep/ubuntu-sshd:18.04
ssh root@localhost -p 8234




*  add this -p 4848:22
o  can I now ssh into the managed node?
	*  ssh root@172.17.0.2:4848
	o  no it timesout
		o  try different command line:
			o  ssh -p 4848 -i id_rsa root@<dockerhost>
			o  ssh -p 4848 -i id_rsa root@localhost
				o  without id_rsa
				o  with 127.0.0.1

		o  try volumes approach to deliver public key
o  document thus far incl prereq
o  add python
o  does the control node have an ssh client?
o  the control node is going to need my PRIVATE ssh key :-(


o  start the tutorial
    o  attempt to get the nginx playbook to work, then document it,
        *  wait for ssh not being configured to bite so we have a use case to debug
        *  fix the hosts cited in the hosts and check the group name
        *  write the playbook, modified as per
        *  confirm that it becomes mounted alongside hosts file
        o  try running it from control node terminal
            o  bang! - hit the ssh blockage
                
        
    o  change hosts group name because it complains:
        o  Invalid characters were found in group names



o  things to note
    *  installing ssh tries to install and configure ssh server, including
               minting some keys (which are output to the console)
    *  this:
            openssl passwd -1 fibble
       outputs the md5 hash of fibble, (and presumably registers the pair?)
    *  $(stuff) evaluates the std out from stuff
    *  useradd .... usersname - edits /etc/passwd, makes a home dir for usersname etc
    *  the options used are
        *  -p md5-of-usersname-password
        *  --create-home
        *  --shell /bin/bash
        *  --groups sudo 
    *  /usr/sbin/sshd -D runs the ssh daemon - presumably more common to do so in background
